---
kind: ServiceAccount
apiVersion: v1
metadata:
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.prometheus: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"rhods-model-monitoring"}}'
    argocd.argoproj.io/sync-wave: "2"
  name: rhods-model-monitoring-sa
  namespace: monitoring

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
   argocd.argoproj.io/sync-wave: "2"
  name: rhods-model-monitoring-crb
subjects:
  - kind: ServiceAccount
    name: rhods-model-monitoring-sa
    namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-scraper

---
kind: Service
apiVersion: v1
metadata:
  name: rhods-model-monitoring
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: serving-prometheus-proxy-tls
    argocd.argoproj.io/sync-wave: "2"
  labels:
    prometheus: rhods-model-monitoring
spec:
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8443
  selector:
    prometheus: rhods-model-monitoring

---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
   argocd.argoproj.io/sync-wave: "2"
  name: rhods-model-monitoring
  labels:
    prometheus: rhods-model-monitoring
spec:
  to:
    kind: Service
    name: rhods-model-monitoring
    weight: 100
  port:
    targetPort: https
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect

---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    prometheus: rhods-model-monitoring
  name: rhods-model-monitoring
spec:
  serviceAccountName: rhods-model-monitoring-sa
  listenLocal: true
  containers:
    - args:
        - '-https-address=:8443'
        - '-provider=openshift'
        - '-openshift-service-account=rhods-model-monitoring-sa'
        - '-upstream=http://localhost:9090'
        - '-tls-cert=/etc/tls/private/tls.crt'
        - '-tls-key=/etc/tls/private/tls.key'
        - '-cookie-secret=SECRET' # TO DO, FIX THIS. USE DEPLOYER TO GENERATE A SECRET THAT IS MOUNTED HERE
        - '--openshift-sar={"namespace": "monitoring", "resource": "services", "verb": "get"}'
        - '--openshift-delegate-urls={"/": {"namespace": "monitoring", "resource": "services", "verb": "get"}}'
        - '-skip-auth-regex=^/metrics'
      image: 'registry.redhat.io/openshift4/ose-oauth-proxy:v4.8'
      imagePullPolicy: Always
      name: oauth-proxy
      ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      volumeMounts:
        - mountPath: /etc/tls/private
          name: prometheus-tls
  serviceMonitorSelector:
    matchLabels:
      modelmesh-service: modelmesh-serving
  additionalScrapeConfigs:
    name: additional-scrape-configs
    key: prometheus-additional.yaml
  volumes:
    - name: prometheus-tls
      secret:
        secretName: serving-prometheus-proxy-tls
  replicas: 1

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
   argocd.argoproj.io/sync-wave: "2"
  name: modelmesh-metrics-monitor
  labels:
    modelmesh-service: modelmesh-serving
spec:
  endpoints:
    - bearerTokenSecret:
        key: ''
      interval: 30s
      port: prometheus
      scheme: https
      tlsConfig:
        ca: {}
        cert: {}
        insecureSkipVerify: true
  namespaceSelector:
    any: true
  selector:
    matchLabels:
      modelmesh-service: modelmesh-serving
